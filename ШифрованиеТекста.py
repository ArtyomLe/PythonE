"""
# Задом-наперёд
s = "Например, записав текст задом-наперёд, что спровоцирует паузу на обдумывание."
print(s[::-1])

# =========================<=*Шифровка*=>==========================

sOld = input("Введите строку для шифровки: ")
sNew = ""                                     # Строка с зашифрованным текстом
code = 0                                      # Переменная хранящая прибавляемое значение


for i in sOld:                                # Перебираем символы в sOld
    ch = ord(i) + (code % 10) + 1             # Получаем код символа и увеличиваем(...+1...+2...+3 => +9...+1...+2...+3)
    ch = chr(ch)                              # Преобразуем в символ
    sNew += ch                                # Добавляем символ к новой строке
    code += 1                                 # Увеличиваем прибавляемое к коду символа
print(sNew)

# ========================<=*Расшифровка*=>==========================

sOld = input("Введите строку для расшифровки: ")
sNew = ""
code = 0

for i in sOld:
    sNew += chr(ord(i) - (code % 10) -1)            # Более сокращённая версия(экономим переменную ch в оперативке)
    code += 1
print(sNew)

"""
# =====================================================================

import random

def crypt(s, key):                                         # s - длина строки | key - ключ
    lenKey = len(key)                                      # Длина ключа
    start = 0                                              # Начало последовательности символов в блоке
    p1 = 0                                                 # Номер элемента ключа

#                       Важно чтобы длина строки была кратна или равна ключу

    if (len(s) % lenKey != 0):                             # Если длинна строки и ключа не совпадают
#        print(len(s)) = 10
        for i in range(lenKey - len(s) % lenKey):          # Вычисляем сколько символов нужно добавить
            s += chr(random. randint(ord("!"), ord("=")))  # Добавляем случайные символы от "!" до "="

#             Запоминаем длину шифруемой строки и создаём переменную накопитель sEncrypt

    lenS = len(s) # Здесь хранится изначальное сообщение с добавлеными к нему символами кратное ключу (6, 12, 18)
    sEncrypt = "" # Сюда будет заносится уже перетасованое сообщение с такой же длинной что и lenS

    while (start + lenKey < lenS + 1):
        sEncrypt += s[start + key[p1] - 1]
        p1 += 1
        if (p1 == lenKey):
            p1 = 0
            start += lenKey

    return sEncrypt                                         # Возвращаем зашифрованную строку

encryptKey = [3, 6, 4, 2, 1, 5]
decryptKey = [5, 4, 1, 3, 6, 2]

stringCrypt = crypt("Привет Бро", encryptKey)
print("Зашифровано:", stringCrypt)

stringCrypt = crypt(stringCrypt, decryptKey)
print("Расшифровано:", stringCrypt)




